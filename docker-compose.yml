version: '3.8'

services:
  ocpp-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:9000"  # OCPP WebSocket port
      - "9001:9001"  # API port
    environment:
      - OCPP_HOST=0.0.0.0
      - OCPP_WEBSOCKET_PORT=9000
      - OCPP_API_PORT=9001
      - OCPP_SYSTEM_NAME=ocpp-central
      - OCPP_HEARTBEAT_INTERVAL=60
      # PostgreSQL Configuration is default
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ocpp_server
      - DB_SSL_MODE=disable
      
      # Uncomment to use SQLite instead of PostgreSQL
      # - DB_TYPE=sqlite
      # - DB_SQLITE_PATH=/app/data/ocpp_server.db
    volumes:
      - ocpp-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:9001/api/status"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ocpp_server
      # Performance tuning for PostgreSQL
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Add volume for initialization scripts
      - ./postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    # Basic PostgreSQL optimization
    command: >
      postgres
        -c max_connections=100
        -c shared_buffers=128MB
        -c work_mem=16MB
        -c maintenance_work_mem=64MB

volumes:
  ocpp-data:
  postgres-data: